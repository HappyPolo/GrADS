%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: (atend)
%%Creator: gxeps $Revision: 1.18 $
%%Title: grads.eps
%%CreationDate: Sun Oct 14 15:52:38 2018
%%Pages:     
%%PageOrder: Ascend
%%PaperSize: Letter
%%PageOrientation: Landscape

%GxepsCommandLine:  print
%BeginGradsCommandHistory
%EndGradsCommandHistory
%%EndComments

%%BeginProlog
%Change the following (values: true, false) to get color or b/w output
/blackwhite {false} def
/clipOn {false} def
/bdef {bind def} bind def
/edef {exch def} bind def
/in {72 mul} bdef
/cm {in 2.54 div} bdef
/c {setrgbcolor} bdef
/g {setgray} bdef
/w {setlinewidth} bdef
/L {moveto rlineto stroke} bdef
/D {5 -1 roll 0 setdash L []0 setdash} bdef %% dashed line
/P {% Lay out a polygon
    % usage: x_n y_n x_n-1 y_n-1 ... x_0 y_0 n P
    3 1 roll moveto {rlineto} repeat} bdef
/F {P fill} bdef %Fill a polygon
/S {P stroke} bdef %Draw a polygon
/gxfonts {%Usage: <font#> gxfonts
    [/Helvetica /Times-Roman /Times-Italic /Symbol /Helvetica-Bold /Times-Bold] 
     exch get findfont} bdef
/sfont {%Usage: <font#> <width> <height> sfont
     /szy edef /szx edef gxfonts [szx 0 0 szy 0 0 ] makefont setfont} def
/LS % Left alligned string
{ % Usage: <string> <font#> <width> <height> <angle> <pos_x> <pos_y>
   gsave translate rotate sfont 0 0 moveto show grestore
} def
/RS % Right alligned string
{ % Usage: <string> <font#> <width> <height> <angle> <pos_x> <pos_y>
   gsave translate rotate sfont 0 0 moveto dup stringwith pop 
   0 sub rmoveto show grestore
} def
/JS % General justified string 
{ %Usage: <string> <font#> <width> <height> <angle> <pos_x> <pos_y> <justx> <justy> JS
 % (Note: justx, justy in percent: e.g., justx=50 => x-centered)
   /jy edef /jx edef gsave translate rotate sfont 0 0 moveto dup stringwidth
   jy mul 0.01 neg mul exch jx mul 0.01 mul neg exch rmoveto show grestore
} def
/B {rectfill} bdef %Fill a box, usage: xlow ylow width height B
/iso_reencode { % Usage: <Font> iso_reencode
  dup /isoname exch def findfont
  dup length dict begin
  { 1 index /FID ne
      {def}
      {pop pop}
      ifelse
  } forall
  /Encoding ISOLatin1Encoding def
  currentdict end
  isoname exch definefont pop
} def
[/Helvetica /Times-Roman /Times-Italic /Helvetica-Bold /Times-Bold]
   {iso_reencode} forall
/BL { %layout a box, usage: xlow ylow width height BL
     /height exch def /width exch def moveto width 0 rlineto
     0 height rlineto width neg 0 rlineto closepath} bdef 
/G {gsave} bdef /R {grestore} bdef
/C0 { %Reset clip path
     clipOn {grestore /clipOn {false} def} if} def
/C1 { %Reset clipping to a box. Usage: xlow ylow width height C
      clipOn {grestore} if gsave /clipOn {true} def
      BL eoclip newpath } bdef
/C2 {%Add clip inside a box to current clipping.  Usage: xlow ylow width height C 
      clipOn not {gsave /clipOn {true} def} if
     clippath BL eoclip newpath } bdef

%Define line widths
/w0 {4 w} bdef
/w1 {7 w} bdef
/w2 {10 w} bdef
/w3 {14 w} bdef
/w4 {17 w} bdef
/w5 {20 w} bdef
/w6 {24 w} bdef
/w7 {27 w} bdef
/w8 {31 w} bdef
/w9 {34 w} bdef
/w10 {38 w} bdef
/w11 {41 w} bdef

%Define dashes
/s0 {[] 0 setdash} bdef
/s1 {[] 0 setdash} bdef
/s2 {[125 60] 0 setdash} bdef
/s3 {[60 60] 0 setdash} bdef
/s4 {[125 60 60 60] 0 setdash} bdef
/s5 {[10 40] 0 setdash} bdef
/s6 {[75 60] 0 setdash} bdef
/s7 {[125 40 15 15 15 40] 0 setdash} bdef
/s8 {[15 80] 0 setdash} bdef

%Define colors:
/c0 {1 g} bdef
/c1 {0 g} bdef
/c2 {0.98 0.24 0.24 c} bdef
/c3 {0.00 0.86 0.00 c} bdef
/c4 {0.12 0.24 1.00 c} bdef
/c5 {0.00 0.78 0.78 c} bdef
/c6 {0.94 0.00 0.51 c} bdef
/c7 {0.90 0.86 0.19 c} bdef
/c8 {0.94 0.51 0.16 c} bdef
/c9 {0.63 0.00 0.78 c} bdef
/c10 {0.63 0.90 0.19 c} bdef
/c11 {0.00 0.63 1.00 c} bdef
/c12 {0.90 0.69 0.18 c} bdef
/c13 {0.00 0.82 0.55 c} bdef
/c14 {0.51 0.00 0.86 c} bdef
/c15 {0.67 0.67 0.67 c} bdef

%Define grays:
/g0 {1 g} bdef
/g1 {0 g} bdef
/g2 {0.16 g} bdef
/g3 {0.46 g} bdef
/g4 {0.7 g} bdef
/g5 {0.58 g} bdef
/g6 {0.1 g} bdef
/g7 {0.34 g} bdef
/g8 {0.22 g} bdef
/g9 {0.82 g} bdef
/g10 {0.4 g} bdef
/g11 {0.64 g} bdef
/g12 {0.28 g} bdef
/g13 {0.52 g} bdef
/g14 {0.76 g} bdef
/g15 {0.5 g} bdef

blackwhite
{ %Black&white output: re-define line colors black, fill colors gray... 
  /c1 {g1} def /c2 {g1} def /c3 {g1} def /c4 {g1} def
  /c5 {g1} def /c6 {g1} def /c7 {g1} def /c8 {g1} def /c9 {g1} def
  /c10 {g1} def /c11 {g1} def /c12 {g1} def /c13 {g1} def /c14 {g1} def
  /c15 {g1} def }
{ %Color output: undefine fill-colors... 
  /g0 {c0} def /g1 {c1} def /g2 {c2} def /g3 {c3} def /g4 {c4} def
  /g5 {c5} def /g6 {c6} def /g7 {c7} def /g8 {c8} def /g9 {c9} def
  /g10 {c10} def /g11 {c11} def /g12 {c12} def /g13 {c13} def /g14 {c14} def
  /g15 {c15} def 
} ifelse
%%EndProlog

%%BeginSetup
1 setlinecap 1 setlinejoin
%%EndSetup
%%Page: 1 1
8.5 in 0 translate 90 rotate % landscape
45 30 translate %move origin slightly in
0.065700 0.065700 scale  %Units: 1000 = .9125 inch
0 0 11000 8500 BL clip newpath % Initial clipping.
c1
showpage
%%Trailer
%%BoundingBox: 572 113 514 55
%%EOF

